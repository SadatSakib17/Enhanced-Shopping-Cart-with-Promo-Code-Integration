<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Shopping Cart with Promo Code</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      max-width: 600px;
      margin: 40px auto;
      padding: 0 20px;
      background: #f9f9f9;
      color: #333;
    }
    h2 {
      text-align: center;
      margin-bottom: 20px;
    }
    .cart-item {
      display: flex;
      justify-content: space-between;
      padding: 10px 0;
      border-bottom: 1px solid #ddd;
    }
    .cart-item:last-child {
      border-bottom: none;
    }
    #checkout-section {
      margin-top: 30px;
      background: #fff;
      padding: 15px;
      border-radius: 6px;
      box-shadow: 0 0 8px rgba(0,0,0,0.05);
    }
    label {
      font-weight: bold;
    }
    input[type="text"] {
      padding: 6px;
      width: 150px;
      margin-right: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    button {
      padding: 7px 15px;
      background-color: #007BFF;
      border: none;
      border-radius: 4px;
      color: white;
      cursor: pointer;
      font-weight: bold;
    }
    button:hover {
      background-color: #0056b3;
    }
    #promo-message {
      margin-top: 10px;
      height: 20px;
      font-weight: bold;
    }
    #cart-summary p {
      margin: 6px 0;
      font-size: 16px;
    }
    #cart-summary p strong {
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>Shopping Cart</h2>

  <div id="cart-items">
    <!-- Cart items will be rendered here -->
  </div>

  <div id="checkout-section">
    <h3>Checkout</h3>
    <div>
      <label for="promo-code">Enter Promo Code:</label>
      <input type="text" id="promo-code" placeholder="Enter code" />
      <button id="apply-promo-btn">Apply</button>
    </div>
    <div id="promo-message"></div>

    <div id="cart-summary">
      <p>Subtotal: $<span id="subtotal">0.00</span></p>
      <p>Discount: $<span id="discount">0.00</span></p>
      <p><strong>Total: $<span id="total">0.00</span></strong></p>
    </div>
  </div>

  <script>
    // --- Sample cart data ---
    let cart = [
      { id: 1, name: "Product A", price: 30.00, qty: 1 },
      { id: 2, name: "Product B", price: 45.00, qty: 2 },
    ];

    // Promo codes with discount rates
    const promoCodes = {
      ostad10: 0.10,
      ostad5: 0.05,
    };

    let appliedPromoCode = null;

    const cartItemsDiv = document.getElementById("cart-items");
    const promoInput = document.getElementById("promo-code");
    const applyBtn = document.getElementById("apply-promo-btn");
    const promoMessage = document.getElementById("promo-message");
    const subtotalEl = document.getElementById("subtotal");
    const discountEl = document.getElementById("discount");
    const totalEl = document.getElementById("total");

    // Render cart items in the UI
    function renderCartItems() {
      cartItemsDiv.innerHTML = "";
      cart.forEach(item => {
        const itemDiv = document.createElement("div");
        itemDiv.classList.add("cart-item");
        itemDiv.innerHTML = `
          <div>${item.name} (x${item.qty})</div>
          <div>$${(item.price * item.qty).toFixed(2)}</div>
        `;
        cartItemsDiv.appendChild(itemDiv);
      });
    }

    // Calculate subtotal from cart items
    function calculateSubtotal() {
      return cart.reduce((sum, item) => sum + item.price * item.qty, 0);
    }

    // Update cart summary (subtotal, discount, total)
    function updateCartSummary() {
      const subtotal = calculateSubtotal();
      subtotalEl.textContent = subtotal.toFixed(2);

      let discountAmount = 0;
      if (appliedPromoCode) {
        discountAmount = subtotal * promoCodes[appliedPromoCode];
      }
      discountEl.textContent = discountAmount.toFixed(2);

      totalEl.textContent = (subtotal - discountAmount).toFixed(2);
    }

    // Apply promo code event handler
    applyBtn.addEventListener("click", () => {
      const code = promoInput.value.trim().toLowerCase();

      if (!code) {
        promoMessage.style.color = "red";
        promoMessage.textContent = "Please enter a promo code.";
        return;
      }

      if (appliedPromoCode === code) {
        promoMessage.style.color = "red";
        promoMessage.textContent = `Promo code '${code}' has already been applied.`;
        return;
      }

      if (promoCodes.hasOwnProperty(code)) {
        appliedPromoCode = code;
        promoMessage.style.color = "green";
        promoMessage.textContent = `Promo code '${code}' applied successfully!`;
      } else {
        promoMessage.style.color = "red";
        promoMessage.textContent = "Invalid promo code. Please try again.";
        return;
      }
      updateCartSummary();
    });

    // Simulate changing cart qty for discount recalculation
    // You can expand this to add real quantity updating logic.
    // For demo, just a timeout that changes quantity after 10 seconds.
    setTimeout(() => {
      cart[0].qty = 2; // Increase quantity of Product A
      promoMessage.textContent = "Cart updated: quantity changed for Product A.";
      renderCartItems();
      updateCartSummary();
    }, 10000);

    // Initial render
    renderCartItems();
    updateCartSummary();
  </script>
</body>
</html>
